
-- Instanc       
--https://xheptcofficial.gitbook.io/kavo-library/
local CoreGui = game:GetService("StarterGui")
local Players = game:GetService("Players")
local ScreenGui = Instance.new("ScreenGui")
local Frame = Instance.new("Frame")
local Frame2 = Instance.new("Frame")
local Frame3 = Instance.new("Frame")
local Frame4 = Instance.new("Frame")
local TextButton = Instance.new("TextButton")
local TextButton2 = Instance.new("TextButton")
local TextButton3 = Instance.new("TextButton")
local tx = Instance.new("TextBox")
local UITextSizeConstraint = Instance.new("UITextSizeConstraint")

--Properties:







ScreenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
ScreenGui.ResetOnSpawn = false
ScreenGui.ClipToDeviceSafeArea = true




Frame.Parent = ScreenGui
Frame.BackgroundColor3 = Color3.fromRGB(26, 26, 26)
Frame.BackgroundTransparency = 0.500
Frame.Position = UDim2.new(0.028712733, 0, 0.1437762257, 0)
Frame.Size = UDim2.new(0.115513338, 0, 0.127972031, 0)
--[[
Frame2.Parent = ScreenGui
Frame2.BackgroundColor3 = Color3.fromRGB(26, 26, 26)
Frame2.BackgroundTransparency = 0.500
Frame2.Position = UDim2.new(0.858712733, 0, 0.1437762257, 0)
Frame2.Size = UDim2.new(0.115513338, 0, 0.127972031, 0)
]]

--[[
Frame3.Parent = ScreenGui
Frame3.BackgroundColor3 = Color3.fromRGB(26, 26, 26)
Frame3.BackgroundTransparency = 0.500
Frame3.Position = UDim2.new(0.858712733, 0, 0.35007762257, 0)
Frame3.Size = UDim2.new(0.115513338, 0, 0.127972031, 0)
]]

--[[
Frame4.Parent = ScreenGui
Frame4.BackgroundColor3 = Color3.fromRGB(26, 26, 26)
Frame4.BackgroundTransparency = 0.500
Frame4.Position = UDim2.new(0.028712733, 0, 0.35037762257, 0)
Frame4.Size = UDim2.new(0.115513338, 0, 0.127972031, 0)
Frame4.Text = "F9"
]]

TextButton.Parent = Frame
TextButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextButton.BackgroundTransparency = 1.000
TextButton.Size = UDim2.new(1, 0, 1, 0)
TextButton.Font = Enum.Font.SourceSans
TextButton.Text = "Earth"
TextButton.TextColor3 = Color3.fromRGB(0, 0, 0)
TextButton.TextScaled = true
TextButton.TextSize = 50.000
TextButton.TextStrokeColor3 = Color3.fromRGB(255, 255, 255)
TextButton.TextStrokeTransparency = 0.000
TextButton.TextWrapped = true
TextButton.MouseButton1Down:Connect(function()
	game:GetService("VirtualInputManager"):SendKeyEvent(true, "R" , false , game)
end)





UITextSizeConstraint.Parent = TextButton
UITextSizeConstraint.MaxTextSize = 50




--buttonrejoin















--[[
local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/Maikderninja/Maikderninja/main/Test.lua"))();

local Window = Library.CreateLib("Example", "Sentinel")

local Tab1 = Window:NewTab("Example")

local Section1 = Tab1:NewSection("Example")

Section1:NewKeybind("Toggle ui", "Toggle the ui yes", Enum.KeyCode.F6, function()
    Library:ToggleUI()
end)]]
wait(1)
local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))()


local Window = Library.CreateLib("Earth", "Ocean")



local colors = {
    SchemeColor = Color3.fromRGB(0,255,255),
    Background = Color3.fromRGB(0, 0, 0),
    Header = Color3.fromRGB(0, 0, 0),
    TextColor = Color3.fromRGB(255,255,255),
    ElementColor = Color3.fromRGB(20, 20, 20)
}

--[[local Window = Library.CreateLib("JJDI Ikuy", colors)]]
local Hu = game.Players.LocalPlayer.Character.HumanoidRootPart

--[[Section:NewButton("T", "Scritps", function()
    
end)]]

--170 ()
local TabL = Window:NewTab("Job")
local copySection = TabL:NewSection("Copy")



--230 ()
local Tabb = Window:NewTab("Playerslist")
local SzSection = Tabb:NewSection("FIXSize and tp")




local TabO = Window:NewTab("Setting")
local SettingSection = TabO:NewSection("Auto")




local TabOP = Window:NewTab("AutoOP")
local OPSection = TabOP:NewSection("Auto")




local TabLuck = Window:NewTab("Lucky")
local LSection = TabLuck:NewSection("Server")



--[[
local TabR = Window:NewTab("Server")
local SvSection = TabR:NewSection("Server")

]]


local TabOO = Window:NewTab("Walk")
local HunSection = TabOO:NewSection("Jump")



--630 ()
local TabQ = Window:NewTab("esp")
local ESSection = TabQ:NewSection("SEting")
















--[[Help 
	
	GetDescendants

]]


--option

--local Tabb = Window:NewTab("OP")
--local lolSection = Tabb:NewSection("OPT")
--[[
lolSection:NewSlider("Speed", "fast", 500, 0, function(s) -- 500 (MaxValue) | 0 (MinValue)
    sp.WalkSpeed = s
end)

lolSection:NewSlider("Jump", "Jumppower", 500, 0, function(j) -- 500 (MaxValue) | 0 (MinValue)
    sp.JumpPower = j
end)
]]
--[[copySection:NewButton("Position", "Copy", function()
    setclipboard(tostring(game.Players.LocalPlayer.Character.HumanoidRootPart.Position))
end)]]
copySection:NewButton("CF", "Copy", function()
    setclipboard(tostring(game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame))
end)
copySection:NewButton("PlaceID", "Copy", function()
    setclipboard(tostring(game.PlaceId))
end)

copySection:NewButton("JobId", "Copy", function()
    setclipboard(tostring(game.JobId))
end)





















--[[
SettingSection:NewButton("FIX BUTTON FLASE", "Scritps", function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/EarthZ1000/JJ-IKUY/main/file"))()
end)
setclipboard(tostring("https://xheptcofficial.gitbook.io/kavo-library/"))
]]




--size
Ntool = {}
Et = nil
Plr = {}
for i,v in pairs(game:GetService("Players"):GetChildren()) do
    table.insert(Plr,v.Name) 
end



for i,v in pairs(game:GetService("Players").LocalPlayer.Backpack:GetChildren()) do
  if v:IsA"Tool" then
            table.insert(Ntool,v.Name)
  end
end


local dropNt = LSection:NewDropdown("Ntool","Info", Ntool, function(t)
    Et = t
 
      
  
  end)
--[[

LSection:NewButton("reweapon", "Refreshes Dropdown", function()
  table.clear(Ntool)
        for i,v in pairs(game:GetService("Players").LocalPlayer.Backpack:GetChildren()) do
        if v:IsA"Tool" then
  table.insert(Ntool,v.Name)
        
        end
    end
end)

]]

local dropPlr = SzSection:NewDropdown("Dropdown","Info", Plr, function(t)
setclipboard(tostring(t))

end)

SzSection:NewToggle("Infinite Jump", "Jump Infinitly", function(state)
		if state then
			print("Toggle On")
			IJ = true
		else
			print("Toggle Off")
			IJ = false
		end
		
	end)
game:GetService("UserInputService").JumpRequest:connect(function()
	if IJ then
		game:GetService"Players".LocalPlayer.Character:FindFirstChildOfClass'Humanoid':ChangeState("Jumping")
	end
end)










SzSection:NewButton("Update Players", "Refreshes Dropdown", function()
  dropPlr:Refresh(Plr)
end)





LSection:NewButton("Update tool", "Refreshes Dropdown", function(t)
   table.clear(Ntool)
        for i,v in pairs(game:GetService("Players").LocalPlayer.Backpack:GetChildren()) do
        if v:IsA"Tool" then
  table.insert(Ntool,v.Name)
    wait(0.2)
  dropNt:Refresh(Ntool)
    end
  end
end)







LSection:NewToggle("Auto Equip", " ", function(a)
AutoE = a
end)





spawn(function()
while wait() do
if AutoE then
pcall(function()
game:GetService("Players").LocalPlayer.Character.Humanoid:EquipTool(game:GetService("Players").LocalPlayer.Backpack:FindFirstChild(Et))
end)
end
    end
end)






OPSection:NewToggle("noclip", "", function(v)

    _G.Gg = v
local player = game.Players.LocalPlayer
local character = player.Character

while _G.Gg do wait(.1)
        for _, v in pairs(character:GetDescendants()) do
            pcall(function()
                if v:IsA("BasePart") then
                    v.CanCollide = false
            
            end
          end)
      end
    end
  end)

game:GetService("RunService").Stepped:wait()



--[[
SzSection:NewButton("Click To TP", "", function()
    game:GetService("Workspace")[PlayerTP].HumanoidRootPart.CFrame = game:GetService("Workspace").EarthKungZXCV.HumanoidRootPart.CFrame
end)]]

--[[SzSection:NewButton("ClickfixSize", "", function()
    part = game:GetService("Workspace")[PlayerTP].HumanoidRootPart

    part.Size = Vector3.new(250, 5, 250)
end)

--SzSection:NewButton("offcanandtra", "", function()
    game:GetService("Workspace")[PlayerTP].HumanoidRootPart.CanCollide = false
    game:GetService("Workspace")[PlayerTP].HumanoidRootPart.Transparency = 0.8
end)]]

--[[AutoSection:NewToggle("Autosize", "", function(s)
_G.SI = s
while _G.SI do wait()
    game:GetService("Workspace")[PlayerTP].HumanoidRootPart.CanCollide = false
    game:GetService("Workspace")[PlayerTP].HumanoidRootPart.Transparency = 0.8
    end
end)
AutoSection:NewToggle("Autocan", "", function(c)
_G.can = c
while _G.can do wait()
    part = game:GetService("Workspace")[PlayerTP].HumanoidRootPart

    part.Size = Vector3.new(250, 5, 250)
    end
end)]]
--[[AutoSection:NewToggle("Auto Tp", "", function(t)
_G.TPPlayer = t
while _G.TPPlayer do wait()
game:GetService("Workspace")[PlayerTP].HumanoidRootPart.CFrame = game:GetService("Workspace").EarthKungZXCV.HumanoidRootPart.CFrame
end
end)
]]





SettingSection:NewKeybind("KeybindText", "KeybindInfo", Enum.KeyCode.R, function()
	Library:ToggleUI()
end)


SettingSection:NewButton("F9 command", "", function(t)

Frame2.Parent = ScreenGui
-- Frame2.BackgroundColor3 = Color3.fromRGB(26, 26, 26)
Frame2.BackgroundTransparency = 0.500
Frame2.Position = UDim2.new(0.858712733, 0, 0.1437762257, 0)
Frame2.Size = UDim2.new(0.115513338, 0, 0.127972031, 0)

Frame4.Parent = ScreenGui
Frame4.BackgroundColor3 = Color3.fromRGB(26, 26, 26)
Frame4.BackgroundTransparency = 0.500
Frame4.Position = UDim2.new(0.028712733, 0, 0.35037762257, 0)
Frame4.Size = UDim2.new(0.115513338, 0, 0.127972031, 0)
  

TextButton3.Parent = Frame4
-- TextButton3.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextButton3.BackgroundTransparency = 1.000
TextButton3.Size = UDim2.new(1, 0, 1, 0)
TextButton3.Font = Enum.Font.SourceSans
TextButton3.Text = "F9"
TextButton3.TextColor3 = Color3.fromRGB(0, 0, 0)
TextButton3.TextScaled = true
TextButton3.TextSize = 50.000
TextButton3.TextStrokeColor3 = Color3.fromRGB(255, 255, 255)
TextButton3.TextStrokeTransparency = 0.000
TextButton3.TextWrapped = true
TextButton3.MouseButton1Down:Connect(function()
	game:GetService("VirtualInputManager"):SendKeyEvent(true, "F9" , false , game)
end)
TextButton3.MouseButton1Down:Connect(function()
        loadstring(tx.Text)()
    end)



tx.Parent = Frame2
tx.Text = ""
tx.ClearTextOnFocus = true
tx.Font = Enum.Font.SourceSans
tx.PlaceholderText = "Hi"
tx.Size = UDim2.new(1, 0, 1, 0)
-- tx.BackgroundColor3 = Color3.fromRGB(243, 232, 208)

    
  end)




    
--[[
AutoSection:NewToggle("Auto Bysafe", "", function(p)
_G.Bysafe = p
while _G.Bysafe do wait()
    game:GetService("Workspace"). EarthKungZXCV.HumanoidRootPart.Anchored = true
    game:GetService("Workspace"). EarthKungZXCV.HumanoidRootPart.CanCollide = false
    game:GetService("Workspace") .EarthKungZXCV.HumanoidRootPart.Transparency = 0.8
    end
end)
]]



ESSection:NewColorPicker("background color", "", Color3.fromRGB(255,255,255), function(color)
	
		TextButton3.BackgroundColor3 = color
    TextButton2.BackgroundColor3 = color
    TextButton.BackgroundColor3 = color
       tx.BackgroundColor3 = color
    	 Frame.BackgroundColor3 = color
  Frame2.BackgroundColor3 = color
    Frame3.BackgroundColor3 = color
    Frame4.BackgroundColor3 = color

	end)
	
SettingSection:NewButton("ToggleUI", "Scritps", function()
    
Frame3.Parent = ScreenGui
Frame3.BackgroundColor3 = Color3.fromRGB(26, 26, 26)
Frame3.BackgroundTransparency = 0.500
Frame3.Position = UDim2.new(0.858712733, 0, 0.35007762257, 0)
Frame3.Size = UDim2.new(0.115513338, 0, 0.127972031, 0)
    
TextButton2.Parent = Frame3
TextButton2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextButton2.BackgroundTransparency = 1.000
TextButton2.Size = UDim2.new(1, 0, 1, 0)
TextButton2.Font = Enum.Font.SourceSans
TextButton2.Text = "Tog"
TextButton2.TextColor3 = Color3.fromRGB(0, 0, 0)
TextButton2.TextScaled = true
TextButton2.TextSize = 50.000
TextButton2.TextStrokeColor3 = Color3.fromRGB(255, 255, 255)
TextButton2.TextStrokeTransparency = 0.000
TextButton2.TextWrapped = true
TextButton2.MouseButton1Down:Connect(function()
        Frame4.Visible = false
        Frame3.Visible = false
        Frame2.Visible = false
         Frame.Visible = false
    TextButton.Visible = false
    TextButton2.Visible = false

    end)
    
end)

SettingSection:NewButton("Rejoin", "Scritps", function()
game:GetService("TeleportService"):Teleport(game.PlaceId)

  end)
SettingSection:NewButton("HOPlow", "Scritps", function()
    local Http = game:GetService("HttpService")
local TPS = game:GetService("TeleportService")
local Api = "https://games.roblox.com/v1/games/"

local _place = game.PlaceId
local _servers = Api.._place.."/servers/Public?sortOrder=Asc&limit=100"
function ListServers(cursor)
   local Raw = game:HttpGet(_servers .. ((cursor and "&cursor="..cursor) or ""))
   return Http:JSONDecode(Raw)
end

local Server, Next; repeat
   local Servers = ListServers(Next)
   Server = Servers.data[1]
   Next = Servers.nextPageCursor
until Server

TPS:TeleportToPlaceInstance(_place,Server.id,game.Players.LocalPlayer)
  end)


spawn(function()
   while wait(3) do
       if Methodnow == 1 then
        Methodnow = 2
        Method = CFrame.new(0,0,-4.37)
        else
        Methodnow = 1
        Method = CFrame.new(0,0,-4.40)
       end
    end
end)


Method = CFrame.new(0,0,-4.35)





OPSection:NewToggle("Auto bring", "", function(v)
    _G.BringPl = v
    while _G.BringPl do wait(.1)
    pcall(function()
        
    for i,v in next, game:GetService('Players'):GetPlayers() do
    if v.Name ~= game:GetService('Players').LocalPlayer.Name then
            v.Character.HumanoidRootPart.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame * Method
            end
        end
    end)
end
end)
OPSection:NewTextBox("TextboxText", "TextboxInfo", function(txt)
	print(txt)
		getgenv().HitboxSize = txt
end)

--getgenv().HitboxSize = 10
getgenv().HitboxTransparency = 0.7
getgenv().HitboxStatus = false
getgenv().TeamCheck = false
getgenv().FriendCheck = false




OPSection:NewToggle("Size", "", function(state)
	getgenv().HitboxStatus = state
    game:GetService('RunService').RenderStepped:connect(function()
		if HitboxStatus == true and TeamCheck == false and FriendCheck == false then
			for i,v in next, game:GetService('Players'):GetPlayers() do
				if v.Name ~= game:GetService('Players').LocalPlayer.Name then
					pcall(function()
						v.Character.HumanoidRootPart.Size = Vector3.new(HitboxSize, HitboxSize, HitboxSize)
						v.Character.HumanoidRootPart.Transparency = HitboxTransparency
						v.Character.HumanoidRootPart.BrickColor = BrickColor.new("Really black")
						v.Character.HumanoidRootPart.Material = "Neon"
						v.Character.HumanoidRootPart.CanCollide = false
					end)
				end
			end
        elseif HitboxStatus == true and TeamCheck == false and FriendCheck == true then
            for i,v in next, game:GetService('Players'):GetPlayers() do
                for i2,v2 in pairs(game:GetService('Players'):GetChildren()) do
                    if v.Name ~= game:GetService('Players').LocalPlayer.Name and not v2:IsFriendsWith(game:GetService('Players').LocalPlayer.UserId) then
                        pcall(function()
                            v.Character.HumanoidRootPart.Size = Vector3.new(HitboxSize, HitboxSize, HitboxSize)
                            v.Character.HumanoidRootPart.Transparency = HitboxTransparency
                            v.Character.HumanoidRootPart.BrickColor = BrickColor.new("Really black")
                            v.Character.HumanoidRootPart.Material = "Neon"
                            v.Character.HumanoidRootPart.CanCollide = false
                        end)
                    end
                end
			end
        elseif HitboxStatus == true and TeamCheck == true and FriendCheck == false then
            for i,v in next, game:GetService('Players'):GetPlayers() do
				if game:GetService('Players').LocalPlayer.Team ~= v.Team then
					pcall(function()
						v.Character.HumanoidRootPart.Size = Vector3.new(HitboxSize, HitboxSize, HitboxSize)
						v.Character.HumanoidRootPart.Transparency = HitboxTransparency
						v.Character.HumanoidRootPart.BrickColor = BrickColor.new("Really black")
						v.Character.HumanoidRootPart.Material = "Neon"
						v.Character.HumanoidRootPart.CanCollide = false
					end)
				end
			end
        elseif HitboxStatus == true and TeamCheck == true and FriendCheck == true then
            for i,v in next, game:GetService('Players'):GetPlayers() do
				if game:GetService('Players').LocalPlayer.Team ~= v.Team and not game:GetService('Players'):IsFriendsWith(UserId) then
					pcall(function()
						v.Character.HumanoidRootPart.Size = Vector3.new(HitboxSize, HitboxSize, HitboxSize)
						v.Character.HumanoidRootPart.Transparency = HitboxTransparency
						v.Character.HumanoidRootPart.BrickColor = BrickColor.new("Really black")
						v.Character.HumanoidRootPart.Material = "Neon"
						v.Character.HumanoidRootPart.CanCollide = false
					end)
				end
			end
		else
		    for i,v in next, game:GetService('Players'):GetPlayers() do
				if v.Name ~= game:GetService('Players').LocalPlayer.Name then
					pcall(function()
						v.Character.HumanoidRootPart.Size = Vector3.new(2,2,1)
						v.Character.HumanoidRootPart.Transparency = 1
						v.Character.HumanoidRootPart.BrickColor = BrickColor.new("Medium stone grey")
						v.Character.HumanoidRootPart.Material = "Plastic"
						v.Character.HumanoidRootPart.CanCollide = false
					end)
				end
			end
		end
	end)
end)    
--[[_G.HeadSize = 15


OPSection:NewToggle("Size", "", function(v)
    _G.BringPl = v
    while _G.BringPl do wait(.1)
        pcall(function()
    for i,v in next, game:GetService('Players'):GetPlayers() do
    if v.Name ~= game:GetService('Players').LocalPlayer.Name then
            v.Character.HumanoidRootPart.Size = Vector3.new(_G.HeadSize,_G.HeadSize,_G.HeadSize)
v.Character.HumanoidRootPart.Transparency = 0.8
v.Character.HumanoidRootPart.BrickColor = BrickColor.new("Really blue")
v.Character.HumanoidRootPart.Material = "Neon"
v.Character.HumanoidRootPart.CanCollide = false
-- v.Character.HumanoidRootPart.Anchored = true
            end
        end
    end)
end
end)
]]


--[[
SzSection:NewButton("offcanandtra", "", function()
    game:GetService("Workspace")[PlayerTP].HumanoidRootPart.CanCollide = false
    game:GetService("Workspace")[PlayerTP].HumanoidRootPart.Transparency = 0.8
end)
]]


















--[[Flags = {}
for i,v in pairs(game:GetService("Workspace").Map.ImportantAssets.Flags:GetChildren()) do
    table.insert(Flags,v.Name) 
end

local dropdown = TPFSection:NewDropdown("Dropdown","Info", TP, function(t)
    TP = t
end)
TPFSection:NewButton("Update Dropdown", "Refreshes Dropdown", function()
  dropdown:Refresh(Flags)
end)

TPFSection:NewButton("TPtoFlag", "ButtonInfo", function(t)
    Hu.CFrame = game:GetService("Workspace").Map.ImportantAssets.Flags[TP].Main.CFrame
    --game:GetService("Workspace").Map.ImportantAssets.Flags[TP].Main.CFrame = game.Players.LocalPlayer.Character.Humanoid.CFrame
end)

local Tab = Window:NewTab("Boss")
local BossSection = Tab:NewSection("SCR")

BossSection:NewButton("ClickfixSize", "", function()
    part = game:GetService("Workspace").Bosses["Sorceress Of Darkness"].HumanoidRootPart

    part.Size = Vector3.new(250, 25, 250)
    
    
    
end)
BossSection:NewButton("offcanandtra", "", function()
    game:GetService("Workspace").Bosses["Sorceress Of Darkness"].HumanoidRootPart.CanCollide = false
    game:GetService("Workspace").Bosses["Sorceress Of Darkness"].HumanoidRootPart.Transparency = 0.8
end)

]]








--[[SvSection:NewTextBox("ServerPlaceId", "TextboxInfo", function(Pl)
	game:GetService("TeleportService"):Teleport(Pl)
end)]]
--[[SvSection:NewTextBox("ServerJobId", "TextboxInfo", function(Job)
	
game:GetService("ReplicatedStorage").__ServerBrowser:InvokeServer("teleport", (Job))
end)








]]
local gameHu = game.Players.LocalPlayer.Character.Humanoid

HunSection:NewTextBox("Speed", "TextboxInfo", function(Speed)
    while wait() do     game:GetService("Players").LocalPlayer.Character.Humanoid.WalkSpeed = (Speed)
        end
  end)
HunSection:NewTextBox("Jump", "TextboxInfo", function(Jump)
    while wait() do
      gameHu.JumpPower = (Jump)
    end
  end)

HunSection:NewTextBox("SizeHB", "TextboxInfo", function(s)
    while wait() do
      getgenv().HitboxSize = s
    end
  end)


HunSection:NewTextBox("Trancy", "TextboxInfo", function(s)
    while wait() do
      getgenv().HitboxTransparency = s
    end
  end)














--Luckybox




LSection:NewButton("RandomLucky", "", function()
    _G.Hi = true
while _G.Hi do wait(0.1)
game:GetService("ReplicatedStorage").SpawnGalaxyBlock:FireServer()
game:GetService("ReplicatedStorage").SpawnRainbowBlock:FireServer()
    end
end)
--[[HunSection:NewKeybind("KeybindText", "KeybindInfo", Enum.KeyCode.R, function()
	Library:ToggleUI()
end)
]]





local c = workspace.CurrentCamera
local ps = game:GetService("Players")
local lp = ps.LocalPlayer
local rs = game:GetService("RunService")

local function esp(p,cr)
	local h = cr:WaitForChild("Humanoid")
	local hrp = cr:WaitForChild("Head")

	local text = Drawing.new("Text")
	text.Visible = false
	text.Center = true
	text.Outline = false 
	text.Font = 3
	text.Size = 16.16
  text.Color = Color3.new(170,170,170)
	local conection
	local conection2
	local conection3

	local function dc()
		text.Visible = false
		text:Remove()
		if conection then
			conection:Disconnect()
			conection = nil 
		end
		if conection2 then
			conection2:Disconnect()
			conection2 = nil 
		end
		if conection3 then
			conection3:Disconnect()
			conection3 = nil 
		end
	end

	conection2 = cr.AncestryChanged:Connect(function(_,parent)
		if not parent then
			dc()
		end
	end)

	conection3 = h.HealthChanged:Connect(function(v)
		if (v<=0) or (h:GetState() == Enum.HumanoidStateType.Dead) then
			dc()
		end
	end)

	conection = rs.RenderStepped:Connect(function()
		local hrp_pos,hrp_onscreen = c:WorldToViewportPoint(hrp.Position)
		if hrp_onscreen and ESPName == true then
			text.Position = Vector2.new(hrp_pos.X, hrp_pos.Y - 27)
			text.Text = p.DisplayName.." (@"..p.Name..")"
			text.Visible = true
		else
			text.Visible = false
		end
	end)
end

local function p_added(p)
	if p.Character then
		esp(p,p.Character)
	end
	p.CharacterAdded:Connect(function(cr)
		esp(p,cr)
	end)
end

for i,p in next, ps:GetPlayers() do 
	if p ~= lp then
		p_added(p)
	end
end



ps.PlayerAdded:Connect(p_added)








getgenv().HitboxStatus = false
getgenv().TeamCheck = false
getgenv().FriendCheck = false


--setting



ESSection:NewToggle("HL", "ToggleInfo", function(state)
    if state then
        getgenv().enabled = state --Toggle on/off
getgenv().filluseteamcolor = true --Toggle fill color using player team color on/off
getgenv().outlineuseteamcolor = true --Toggle outline color using player team color on/off
getgenv().fillcolor = Color3.new(0, 0, 0) --Change fill color, no need to edit if using team color
getgenv().outlinecolor = Color3.new(1, 1, 1) --Change outline color, no need to edit if using team color
getgenv().filltrans = 0.5 --Change fill transparency
getgenv().outlinetrans = 0.5 --Change outline transparency

loadstring(game:HttpGet("https://raw.githubusercontent.com/Vcsk/RobloxScripts/main/Highlight-ESP.lua"))()
    else
        
    end
end)

ESSection:NewToggle("NAME", "ToggleInfo", function(state)
    if state then
        getgenv().ESPName = state
    else
    end
end)















































--s lock
-- Gui to Lua
-- Version: 3.2

-- Instances:

local ShiftlockStarterGui = Instance.new("ScreenGui")
local ImageButton = Instance.new("ImageButton")

--Properties:

ShiftlockStarterGui.Name = "Shiftlock (StarterGui)"
ShiftlockStarterGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
ShiftlockStarterGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

ImageButton.Parent = ShiftlockStarterGui
ImageButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ImageButton.BackgroundTransparency = 1.000
ImageButton.Position = UDim2.new(0.921914339, 0, 0.552375436, 0)
ImageButton.Size = UDim2.new(0.0636147112, 0, 0.0661305636, 0)
ImageButton.SizeConstraint = Enum.SizeConstraint.RelativeXX
ImageButton.Image = "http://www.roblox.com/asset/?id=182223762"

-- Scripts:

local function TLQOYN_fake_script() -- ImageButton.ShiftGUI 
	local script = Instance.new('LocalScript', ImageButton)

	local MobileCameraFramework = {}
	local players = game:GetService("Players")
	local runservice = game:GetService("RunService")
	local CAS = game:GetService("ContextActionService")
	local player = players.LocalPlayer
	local character = player.Character or player.CharacterAdded:Wait()
	local root = character:WaitForChild("HumanoidRootPart")
	local humanoid = character.Humanoid
	local camera = workspace.CurrentCamera
	local button = script.Parent
	
	--Visiblity
	uis = game:GetService("UserInputService")
	ismobile = uis.TouchEnabled
	button.Visible = ismobile
	
	local states = {
		OFF = "rbxasset://textures/ui/mouseLock_off@2x.png",
		ON = "rbxasset://textures/ui/mouseLock_on@2x.png"
	}
	local MAX_LENGTH = 900000
	local active = false
	local ENABLED_OFFSET = CFrame.new(1.7, 0, 0)
	local DISABLED_OFFSET = CFrame.new(-1.7, 0, 0)
	local function UpdateImage(STATE)
		button.Image = states[STATE]
	end
	local function UpdateAutoRotate(BOOL)
		humanoid.AutoRotate = BOOL
	end
	local function GetUpdatedCameraCFrame(ROOT, CAMERA)
		return CFrame.new(root.Position, Vector3.new(CAMERA.CFrame.LookVector.X * MAX_LENGTH, root.Position.Y, CAMERA.CFrame.LookVector.Z * MAX_LENGTH))
	end
	local function EnableShiftlock()
		UpdateAutoRotate(false)
		UpdateImage("ON")
		root.CFrame = GetUpdatedCameraCFrame(root, camera)
		camera.CFrame = camera.CFrame * ENABLED_OFFSET
	end
	local function DisableShiftlock()
		UpdateAutoRotate(true)
		UpdateImage("OFF")
		camera.CFrame = camera.CFrame * DISABLED_OFFSET
		pcall(function()
			active:Disconnect()
			active = nil
		end)
	end
	UpdateImage("OFF")
	active = false
	function ShiftLock()
		if not active then
			active = runservice.RenderStepped:Connect(function()
				EnableShiftlock()
			end)
		else
			DisableShiftlock()
		end
	end
	local ShiftLockButton = CAS:BindAction("ShiftLOCK", ShiftLock, false, "On")
	CAS:SetPosition("ShiftLOCK", UDim2.new(0.8, 0, 0.8, 0))
	button.MouseButton1Click:Connect(function()
		if not active then
			active = runservice.RenderStepped:Connect(function()
				EnableShiftlock()
			end)
		else
			DisableShiftlock()
		end
	end)
	return MobileCameraFramework
	
end
coroutine.wrap(TLQOYN_fake_script)()
local function OMQRQRC_fake_script() -- ShiftlockStarterGui.LocalScript 
	local script = Instance.new('LocalScript', ShiftlockStarterGui)

	local Players = game:GetService("Players")
	local UserInputService = game:GetService("UserInputService")
	local Settings = UserSettings()
	local GameSettings = Settings.GameSettings
	local ShiftLockController = {}
	while not Players.LocalPlayer do
		wait()
	end
	local LocalPlayer = Players.LocalPlayer
	local Mouse = LocalPlayer:GetMouse()
	local PlayerGui = LocalPlayer:WaitForChild("PlayerGui")
	local ScreenGui, ShiftLockIcon, InputCn
	local IsShiftLockMode = true
	local IsShiftLocked = true
	local IsActionBound = false
	local IsInFirstPerson = false
	ShiftLockController.OnShiftLockToggled = Instance.new("BindableEvent")
	local function isShiftLockMode()
		return LocalPlayer.DevEnableMouseLock and GameSettings.ControlMode == Enum.ControlMode.MouseLockSwitch and LocalPlayer.DevComputerMovementMode ~= Enum.DevComputerMovementMode.ClickToMove and GameSettings.ComputerMovementMode ~= Enum.ComputerMovementMode.ClickToMove and LocalPlayer.DevComputerMovementMode ~= Enum.DevComputerMovementMode.Scriptable
	end
	if not UserInputService.TouchEnabled then
		IsShiftLockMode = isShiftLockMode()
	end
	local function onShiftLockToggled()
		IsShiftLocked = not IsShiftLocked
		ShiftLockController.OnShiftLockToggled:Fire()
	end
	local initialize = function()
		print("enabled")
	end
	function ShiftLockController:IsShiftLocked()
		return IsShiftLockMode and IsShiftLocked
	end
	function ShiftLockController:SetIsInFirstPerson(isInFirstPerson)
		IsInFirstPerson = isInFirstPerson
	end
	local function mouseLockSwitchFunc(actionName, inputState, inputObject)
		if IsShiftLockMode then
			onShiftLockToggled()
		end
	end
	local function disableShiftLock()
		if ScreenGui then
			ScreenGui.Parent = nil
		end
		IsShiftLockMode = false
		Mouse.Icon = ""
		if InputCn then
			InputCn:disconnect()
			InputCn = nil
		end
		IsActionBound = false
		ShiftLockController.OnShiftLockToggled:Fire()
	end
	local onShiftInputBegan = function(inputObject, isProcessed)
		if isProcessed then
			return
		end
		if inputObject.UserInputType ~= Enum.UserInputType.Keyboard or inputObject.KeyCode == Enum.KeyCode.LeftShift or inputObject.KeyCode == Enum.KeyCode.RightShift then
		end
	end
	local function enableShiftLock()
		IsShiftLockMode = isShiftLockMode()
		if IsShiftLockMode then
			if ScreenGui then
				ScreenGui.Parent = PlayerGui
			end
			if IsShiftLocked then
				ShiftLockController.OnShiftLockToggled:Fire()
			end
			if not IsActionBound then
				InputCn = UserInputService.InputBegan:connect(onShiftInputBegan)
				IsActionBound = true
			end
		end
	end
	GameSettings.Changed:connect(function(property)
		if property == "ControlMode" then
			if GameSettings.ControlMode == Enum.ControlMode.MouseLockSwitch then
				enableShiftLock()
			else
				disableShiftLock()
			end
		elseif property == "ComputerMovementMode" then
			if GameSettings.ComputerMovementMode == Enum.ComputerMovementMode.ClickToMove then
				disableShiftLock()
			else
				enableShiftLock()
			end
		end
	end)
	LocalPlayer.Changed:connect(function(property)
		if property == "DevEnableMouseLock" then
			if LocalPlayer.DevEnableMouseLock then
				enableShiftLock()
			else
				disableShiftLock()
			end
		elseif property == "DevComputerMovementMode" then
			if LocalPlayer.DevComputerMovementMode == Enum.DevComputerMovementMode.ClickToMove or LocalPlayer.DevComputerMovementMode == Enum.DevComputerMovementMode.Scriptable then
				disableShiftLock()
			else
				enableShiftLock()
			end
		end
	end)
	LocalPlayer.CharacterAdded:connect(function(character)
		if not UserInputService.TouchEnabled then
			initialize()
		end
	end)
	if not UserInputService.TouchEnabled then
		initialize()
		if isShiftLockMode() then
			InputCn = UserInputService.InputBegan:connect(onShiftInputBegan)
			IsActionBound = true
		end
	end
	enableShiftLock()
	return ShiftLockController
	
end
coroutine.wrap(OMQRQRC_fake_script)()







































--gui rejoin


local gui = game.CoreGui.RobloxPromptGui.promptOverlay:WaitForChild("ErrorPrompt")

gui.Size = UDim2.new(0, 400, 0, 230)

leave = gui.MessageArea.ErrorFrame.ButtonArea.LeaveButton

gui.MessageArea.MessageAreaPadding.PaddingTop = UDim.new(0,-20)
gui.MessageArea.ErrorFrame.ErrorFrameLayout.Padding = UDim.new(0, 5)

gui.MessageArea.ErrorFrame.ButtonArea.ButtonLayout.CellPadding = UDim2.new(0, 0, 0, 5)

rejoin = leave:Clone()
rejoin.Parent = leave.Parent
rejoin.ButtonText.Text = "Rejoin"

Players = game:GetService("Players")
TeleportService = game:GetService("TeleportService")

rejoin.MouseButton1Up:Connect(function()
    wait(5)
	if #Players:GetPlayers() <= 1 then
		TeleportService:Teleport(game.PlaceId, Players.LocalPlayer)
	else
TeleportService:TeleportToPlaceInstance(game.PlaceId, game.JobId, Players.LocalPlayer)
    end
end)








